[build-system]
requires = ["maturin>=1.0"]
build-backend = "maturin"

[project]
name = "altrios"
version = "1.0.0"
authors = [
    { name = "ALTRIOS Team", email = "altrios@nrel.gov" },
    { name = "Chad Baker, Lead Developer" },
    { name = "Nick Reinicke, Developer" },
    { name = "Matt Bruchon, Developer" },
    { name = "Saad Akhtar, Developer" },
    { name = "Steven Shi, Developer" },
    { name = "Jinghu Hu, Developer" },
    { name = "Grant Payne, Developer" },
    { name = "Jason Lustbader, PI" },
    { name = "Garrett Anderson, Developer" },
    { name = "Joel Allardyce, Developer" },
    { name = "Prativa Hartnett, Developer" },
    { name = "Steve Fritz, SwRI Lead" },
    { name = "Tyler Dick, Co-PI" },
]
description = "Tool for modeling and optimization of advanced locomotive powertrains for freight rail decarbonization."
readme = "README.md"
license = { file = "LICENSE.md" }
requires-python = ">=3.10, <3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
]
dependencies = [
    "pandas>=2.1.2",
    "numpy>=1.18, <=2.2.5",
    "pymoo==0.6",
    "openpyxl",
    "xlrd",
    "seaborn",
    "matplotlib~=3.3",
    "plotly~=6.0",
    "typing_extensions",
    "pyarrow >= 16.0",
    "polars==1.20.0",
    "requests",
    "PyYAML==6.0.2",
    "simpy",
    "msgpack==1.1.0",
    "ipykernel~=6.29",
    "executing~=2.0",
    "pip",
]

[project.urls]
homepage = "https://www.nrel.gov/transportation/altrios.html"
source = "https://github.com/NREL/altrios"

[project.optional-dependencies]
dev = [
    "pytest~=8.3",
    "maturin~=1.8",
    "python-lsp-server~=1.10",
    "pylsp-mypy>=0.7.0",
    "pylsp-rope>=0.1.17",
    "ruff>=0.11.3",
    "memory_profiler~=0.61.0",
    "mypy>=1.15.0",
]
[dependency-groups]
dev = [
    "altrios[dev]",
]

[tool.maturin]
profile = "release"
python-source = "python"
features = ["pyo3/extension-module"]
module-name = "altrios.altrios_pyo3"
manifest-path = "altrios-py/Cargo.toml"
include = [
    { format = "sdist", path = "altrios-core/Cargo.toml" },
    { format = "sdist", path = "altrios-core/src/*" },
    { format = "sdist", path = "altrios-py/Cargo.toml" },
    { format = "sdist", path = "altrios-py/src/*" },
    { format = "sdist", path = "altrios-core/proc-macros/Cargo.toml" },
    { format = "sdist", path = "altrios-core/proc-macros/src/*" },
]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-64", "osx-arm64", "linux-64", "win-64"]

[tool.pixi.pypi-dependencies]
altrios = { path = ".", editable = true }

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev"], solve-group = "default" }

[tool.pixi.tasks]
cargo_test = "cargo test"
py_test = "maturin develop --release && pixi run -e dev pytest -v"
build_and_test = { depends-on = ["cargo_test", "py_test"] }

fmt = "ruff"
lint = "pylint"
style = { depends-on = ["fmt", "lint"] }

[tool.ruff]
# Specify Python version
target-version = "py311"
# Maximum line length
line-length = 100
# Exclude specific paths
exclude = [
    "site-packages" # Ignore all errors in site-packages
]

[tool.ruff.lint.isort]
known-first-party = ["altrios"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint]
preview = true
select = [
  "A", # flake8-builtins
  "ARG", # flake8-unused-arguments
  # "B", # flake8-bugbear
  "C", # Pylint: Convention
  "C4", # flake8-comprehensions
  "C90", # mccabe
  "COM", # flake8-commas
  "D", # pydocstyle
  "E", # Error
  "F", # Pyflakes
  "G", # flake8-logging-format
  "I", # isort
  "LOG", # flake8-logging
  "N", # pep8-naming
  "NPY", # numpy-specific
  "PERF", # Perflint
  # "PL", # Pylint
  "Q", # flake8-quotes
  "SIM", # flake8-simplify
  # "TID", # flake8-tidy-imports (absolute imports)
  "UP", # pyupgrade
  "W" # Warning
]
ignore = [
  "D400", # first-line-should-end-with-a-period
  "D205", # "1 blank line required between summary and details turned off"
  "E266", # Too many leading `#`
  "N817", # CamelCase `LatinHypercubeSampling` imported as acronym `LHS`
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# https://mypy.readthedocs.io/en/stable/config_file.html
# https://mypy.readthedocs.io/en/stable/config_file.html#example-pyproject-toml
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
allow_redefinition = true
exclude = [
    # '^file1\.py$',  # TOML literal string (single-quotes, no escaping necessary)
    # "^file2\\.py$",  # TOML basic string (double-quotes, backslash and other characters need escaping)
]

# mypy per-module options:

# [[tool.mypy.overrides]]
# module = "mycode.foo.*"
# disallow_untyped_defs = true

# [[tool.mypy.overrides]]
# module = "mycode.bar"
# warn_return_any = false

[[tool.mypy.overrides]]
module = [
    "pymoo.*",
]
ignore_missing_imports = true

