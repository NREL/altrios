[package]
name = "altrios-core"
authors = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
version = "0.2.3"
description = "ALTRIOS Core model for train simulation"
readme = "README.md"
rust-version = { workspace = true }

[dependencies]
csv = { version = "1.1.6", optional = true }
serde = { version = "1.0.136", features = ["derive"] }
rmp-serde = { version = "1.3.0", optional = true }
serde_yaml = { version = "0.8.23", optional = true }
serde_json = { version = "1.0", optional = true }
toml = { version = "0.8.12", optional = true }
include_dir = { version = "0.7.3", optional = true }
uom = { workspace = true, features = ["use_serde"] }
paste = "1.0.7"
easy-ext = "1.0.0"
altrios-proc-macros = { workspace = true }
argmin = "0.5.1"
rayon = "1.5.3"
bincode = "1.3.3"
log = { version = "0.4.17", optional = true }
document-features = { workspace = true }
anyhow = { workspace = true }
readonly = "0.2.3"
duplicate = "0.4.1"
nohash-hasher = "0.2.0"
polars = { workspace = true, features = [
    "dtype-categorical",
    "rank",
    "strings",
    "is_in",
    "lazy",
    "polars-ops",
] }
polars-lazy = { workspace = true, features = [
    "dtype-categorical",
    "rank",
    "strings",
] }
pyo3-polars = { workspace = true, features = ["lazy"] }

# optional
pyo3 = { workspace = true, features = [
    "extension-module",
    "anyhow",
], optional = true }
serde-this-or-that = "0.4.2"
project-root = "0.2.2"
eng_fmt = { workspace = true }
directories = "5.0.1"
tempfile = "3.10.1"
derive_more = { version = "1.0.0", features = ["from_str", "from", "is_variant", "try_into"] }
thiserror = "2.0.11"

[features]
default = ["serde-default"]
## Compiles external resources (e.g. vehicle files or cycle files) to be
## available in the binary
resources = ["dep:include_dir"]
## Exposes ALTRIOS structs, methods, and functions to Python.
pyo3 = ["dep:pyo3"]
## Enables several text file formats for serialization and deserialization
serde-default = ["csv", "json", "toml", "yaml", "msgpack"]
## Enables csv serialization and deserialization
csv = ["dep:csv"]
## Enables json serialization and deserialization
json = ["dep:serde_json"]
## Enables toml serialization and deserialization
toml = ["dep:toml"]
## Enables yaml serialization and deserialization
yaml = ["dep:serde_yaml"]
## Enables message pack serialization and deserialization via `rmp-serde`
msgpack = ["dep:rmp-serde"]

[lints.rust]
# `'cfg(debug_advance_rewind)'` is expected for debugging in `advance_rewind.rs`
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(debug_advance_rewind)'] }
